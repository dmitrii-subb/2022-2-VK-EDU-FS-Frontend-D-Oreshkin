{"ast":null,"code":"import { GET_MESSAGES_SUCCESS, GET_MESSAGES_FAILURE, ADD_NEW_MESSAGE } from \"../constants/reducer\";\nconst initialState = {\n  messages: []\n};\nexport default (function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case ADD_NEW_MESSAGE:\n      return {\n        messages: [action.payload, ...state.messages]\n      };\n    case GET_MESSAGES_SUCCESS:\n      return {\n        messages: [...action.payload]\n      };\n    case GET_MESSAGES_FAILURE:\n      return {};\n    default:\n      return state;\n  }\n});","map":{"version":3,"names":["GET_MESSAGES_SUCCESS","GET_MESSAGES_FAILURE","ADD_NEW_MESSAGE","initialState","messages","state","action","type","payload"],"sources":["/home/dmitrii/Dev/vk/front/2022-2-VK-EDU-FS-Frontend-D-Oreshkin/react-chat/src/reducers/messageReduser.js"],"sourcesContent":["import {\n  GET_MESSAGES_SUCCESS,\n  GET_MESSAGES_FAILURE,\n  ADD_NEW_MESSAGE,\n} from \"../constants/reducer\";\n\nconst initialState = {\n  messages: [],\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_NEW_MESSAGE:\n      return { messages: [action.payload, ...state.messages] };\n    case GET_MESSAGES_SUCCESS:\n      return { messages: [...action.payload] };\n    case GET_MESSAGES_FAILURE:\n      return {};\n    default:\n      return state;\n  }\n};\n"],"mappings":"AAAA,SACEA,oBAAoB,EACpBC,oBAAoB,EACpBC,eAAe,QACV,sBAAsB;AAE7B,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAE;AACZ,CAAC;AAED,gBAAe,YAAkC;EAAA,IAAjCC,KAAK,uEAAGF,YAAY;EAAA,IAAEG,MAAM;EAC1C,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKL,eAAe;MAClB,OAAO;QAAEE,QAAQ,EAAE,CAACE,MAAM,CAACE,OAAO,EAAE,GAAGH,KAAK,CAACD,QAAQ;MAAE,CAAC;IAC1D,KAAKJ,oBAAoB;MACvB,OAAO;QAAEI,QAAQ,EAAE,CAAC,GAAGE,MAAM,CAACE,OAAO;MAAE,CAAC;IAC1C,KAAKP,oBAAoB;MACvB,OAAO,CAAC,CAAC;IACX;MACE,OAAOI,KAAK;EAAC;AAEnB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}